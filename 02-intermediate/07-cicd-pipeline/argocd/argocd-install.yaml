apiVersion: v1
kind: Namespace
metadata:
  name: argocd
  labels:
    app: argocd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cmd-params-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cmd-params-cm
    app.kubernetes.io/part-of: argocd
data:
  server.insecure: "true"  # Disable TLS for demo
---
# This is a simplified ArgoCD installation for demo purposes
# For production, use: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
  namespace: argocd
  labels:
    app: argocd-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: argocd-server
  template:
    metadata:
      labels:
        app: argocd-server
    spec:
      containers:
      - name: argocd-server
        image: argoproj/argocd:latest
        ports:
        - containerPort: 8080
        - containerPort: 8083
        env:
        - name: ARGOCD_SERVER_INSECURE
          value: "true"
        command:
        - argocd-server
        - --staticassets
        - /shared/app
        - --insecure
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: argocd
  labels:
    app: argocd-server
spec:
  type: ClusterIP
  selector:
    app: argocd-server
  ports:
  - name: server
    port: 80
    targetPort: 8080
  - name: grpc
    port: 443
    targetPort: 8080
