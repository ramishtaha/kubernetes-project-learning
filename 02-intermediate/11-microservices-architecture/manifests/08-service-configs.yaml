apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-config
  namespace: microservices
  labels:
    app: api-gateway
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream user_service {
            server user-service:8080;
        }
        
        upstream order_service {
            server order-service:8080;
        }
        
        upstream product_service {
            server product-service:8080;
        }
        
        server {
            listen 8080;
            
            location /health {
                return 200 "API Gateway is healthy";
                add_header Content-Type text/plain;
            }
            
            location /users/ {
                proxy_pass http://user_service/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Service-Name "user-service";
            }
            
            location /orders/ {
                proxy_pass http://order_service/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Service-Name "order-service";
            }
            
            location /products/ {
                proxy_pass http://product_service/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Service-Name "product-service";
            }
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-config
  namespace: microservices
  labels:
    app: user-service
data:
  index.html: |
    {
      "service": "user-service",
      "version": "1.0.0",
      "message": "User service is running",
      "timestamp": "2024-01-01T00:00:00Z"
    }
  health: |
    {
      "status": "healthy",
      "service": "user-service",
      "checks": {
        "database": "connected",
        "memory": "ok"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: order-service-config
  namespace: microservices
  labels:
    app: order-service
data:
  index.html: |
    {
      "service": "order-service",
      "version": "1.0.0",
      "message": "Order service is running",
      "timestamp": "2024-01-01T00:00:00Z"
    }
  health: |
    {
      "status": "healthy",
      "service": "order-service",
      "checks": {
        "database": "connected",
        "user_service": "reachable"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: product-service-config
  namespace: microservices
  labels:
    app: product-service
data:
  index.html: |
    {
      "service": "product-service",
      "version": "1.0.0",
      "message": "Product service is running",
      "timestamp": "2024-01-01T00:00:00Z"
    }
  health: |
    {
      "status": "healthy",
      "service": "product-service",
      "checks": {
        "database": "connected",
        "inventory": "ok"
      }
    }
