apiVersion: apps/v1
kind: Deployment
metadata:
  name: critical-app
  namespace: disaster-recovery
  labels:
    app: critical-app
  annotations:
    backup.velero.io/backup-volumes: data-volume
spec:
  replicas: 2
  selector:
    matchLabels:
      app: critical-app
  template:
    metadata:
      labels:
        app: critical-app
      annotations:
        backup.velero.io/backup-volumes: data-volume
    spec:
      containers:
      - name: app
        image: nginx:1.21
        ports:
        - containerPort: 80
        env:
        - name: APP_ENV
          value: "production"
        - name: DATA_PATH
          value: "/app/data"
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        - name: config-volume
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: app-data-pvc
      - name: config-volume
        configMap:
          name: app-config
---
apiVersion: v1
kind: Service
metadata:
  name: critical-app-service
  namespace: disaster-recovery
  labels:
    app: critical-app
spec:
  type: ClusterIP
  selector:
    app: critical-app
  ports:
  - name: http
    port: 80
    targetPort: 80
